{"version":3,"sources":["tea.jpg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","showWelcome","showFinish","_this2","window","addEventListener","e","setState","history","pushState","body","_this3","react_default","a","createElement","App_Welcome","eventName","generalLocation","onStartClick","handleStartClick","App_Finish","App_Game","questions","onReturn","onFinish","className","Component","Welcome","_this4","App_Button","onClick","Finish","style","backgroundImage","require","width","height","Game","_this5","currentQuestion","answerVisible","_this6","direction","length","newQ","_this7","currentQNumber","currentQ","App_Question","questionText","question","App_Answer","answerText","answer","image","picture","show","onShowAnswerClick","App_Nav","navigate","first","last","Question","Answer","_this8","src","alt","Nav","_this9","Button","_this10","disabled","backgroundColor","borderColor","color","children","Boolean","location","hostname","match","gameData","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5d6581ca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tea.01a4b996.jpg\";","import React, { Component } from 'react';\nimport './App.scss';\n\nclass App extends Component {\n  /*******************************\n    props: {\n        questions: [array],\n        eventName: [string],\n        generalLocation: [string]\n      }\n  ********************************/\n\n  constructor(props){\n    super(props);\n    this.state = {\n      showWelcome: true,\n      showFinish: false\n    }\n  } \n\n  componentDidMount() {    \n    window.addEventListener(\"popstate\", (e) => {\n      if (typeof e.state.showWelcome !== \"undefined\"){\n        this.setState(e.state)\n      }      \n    });\n  }\n\n  handleStartClick(){    \n    window.history.pushState(this.state, \"\");\n    this.setState({showWelcome: false});\n  }\n\n  render() {\n    let body;\n    if (this.state.showWelcome){\n       body = <Welcome eventName={this.props.eventName} generalLocation={this.props.generalLocation} onStartClick={() => this.handleStartClick()}></Welcome>;\n    }\n    else if (this.state.showFinish){\n      body = <Finish></Finish>\n    }\n    else {\n      body = <Game questions={this.props.questions} onReturn={() => this.setState({showWelcome: true})} onFinish={() => this.setState({showFinish: true})}></Game>\n    }    \n    \n    return (\n      <div className=\"App\">\n        {body}  \n      </div>\n    );\n  }\n}\n\nclass Welcome extends Component {\n  render() {\n    return (\n      <div className=\"welcome container\">\n        <header className=\"App-header\">\n          <h1>Welcome to {this.props.eventName}!</h1>\n        </header>\n        <div>\n          <p>You will receive a series of clues that will direct you to locations around {this.props.generalLocation}.</p>\n          <p>Once you think you know the answer, check it by clicking \"Show Answer\". If you got it right, take a photo then go on to the next one.</p>\n          <p>Have fun!</p>\n        </div>\n        <div>\n          <Button onClick={() => this.props.onStartClick()}>Start</Button>\n        </div>\n      </div>\n      );\n  }  \n}\n\nclass Finish extends Component {\n  render(){\n    return (\n      <div className=\"finish container\">\n        <header className=\"App-header\">\n          <h1>Congratulations!</h1>\n        </header>\n        <div className=\"question\">\n          Now it's definitely time for some tea.\n        </div>    \n        <div className=\"vignette\" style={{backgroundImage: \"url(\"+require('./tea.jpg')+\")\", width: \"260px\", height: \"231px\"}}></div>   \n      </div>\n    );\n  }  \n}\n\nclass Game extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      currentQuestion: 0,\n      answerVisible: false,\n    }\n  }  \n\n  componentDidMount() {    \n    window.history.pushState(this.state, \"\");\n    window.addEventListener(\"popstate\", (e) => {\n      if (typeof e.state.currentQuestion !== \"undefined\"){\n        this.setState(e.state);\n      }\n    });\n  }\n\n  navigate(direction) {\n    // Direction is 1 for next, -1 for back    \n    if (this.state.currentQuestion === 0 && direction === -1){\n      this.props.onReturn();\n    }\n    else if (this.state.currentQuestion === this.props.questions.length-1 && direction === 1){\n      this.props.onFinish();\n    }\n    else {\n      this.setState({answerVisible: false});\n      let newQ = this.state.currentQuestion + direction; \n      this.setState({currentQuestion: newQ});\n    }       \n    window.history.pushState(this.state, \"\");\n  }\n\n  render() {\n    let currentQNumber = this.state.currentQuestion;\n    let currentQ = this.props.questions[currentQNumber];\n    return (\n      <div className=\"game container\">\n        <header className=\"App-header\"><h1>Clue {currentQNumber+1}</h1></header>\n        <Question questionText={currentQ.question}></Question>\n        <Answer answerText={currentQ.answer} image={currentQ.picture} show={this.state.answerVisible} onShowAnswerClick={() => this.setState({answerVisible: true})}></Answer>\n        <Nav onClick={(direction) => this.navigate(direction)} first={currentQNumber === 0} last={currentQNumber === this.props.questions.length-1}></Nav>\n      </div>\n    );\n    \n  }\n}\n\nclass Question extends Component {\n  render() {\n    return (\n      <div className=\"question\">\n        {this.props.questionText}\n      </div>\n    )\n  }\n}\n\nclass Answer extends Component {\n  render(){\n    if (this.props.show){\n      let image = \"\";\n      if (typeof this.props.image !== \"undefined\"){\n        image = <img className=\"answer-image\" src={this.props.image} alt=\"The place you're meant to be at.\"></img>\n      }\n\n      return (\n        <div className=\"answer\">\n          <h3>Answer:</h3>\n          {this.props.answerText}\n          {image}\n        </div>\n      )\n    }\n    else {\n      return (\n        <Button onClick={() => this.props.onShowAnswerClick()}>\n          Show Answer\n        </Button>\n      )\n    }\n  }\n}\n\nclass Nav extends Component {\n  render() {\n    return (\n      <div className=\"nav\">        \n        <Button onClick={() => this.props.onClick(-1)}>Back</Button>\n        <Button onClick={() => this.props.onClick(1)}>{this.props.last?\"Finish\":\"Next\"}</Button>\n      </div>    \n    )\n  }\n}\n\nclass Button extends Component {\n  render(){\n    return (\n      <button disabled={this.props.disabled} style={{backgroundColor: \"#e689b0\", borderColor: \"#e689b0\", color: \"black\"}} onClick={() => this.props.onClick()}>{this.props.children}</button>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './milligram.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst gameData = require('./gameData.json');\n\nReactDOM.render(<App eventName={gameData.eventName} generalLocation={gameData.generalLocation} questions={gameData.questions}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}